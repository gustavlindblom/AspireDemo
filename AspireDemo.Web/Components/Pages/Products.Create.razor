@page "/products/create"
@rendermode InteractiveServer

@inject ProductApiClient ProductApi
@inject NavigationManager Navigation

<PageTitle>Create product</PageTitle>

<h1>Create product</h1>

<form method="post" @onsubmit="Submit" @formname="product-plain-form">
    <AntiforgeryToken />
    <div class="form-group">
        <label for="productName">Product name</label>
        <InputText class="form-control" @bind-Value="Model!.ProductName" />
    </div>
    <div class="form-group">
        <label for="productDescription">Product description</label>
        <InputTextArea class="form-control" @bind-Value="Model!.ProductDescription" />
    </div>
    <button class="btn btn-primary" type="submit">Submit</button>
</form>

@code {
    [SupplyParameterFromForm]
    public ProductSubmission? Model { get; set; }

    protected override void OnInitialized() => Model ??= new();

    private async Task Submit()
    {
        var product = await ProductApi.CreateProductAsync(new ProductDto(Model?.ProductName ?? "", Model?.ProductDescription ?? "", ""));

        if (product == null)
            Navigation.NavigateTo("/error");
        else
            Navigation.NavigateTo($"/products/{product.Slug}");
    }

    public class ProductSubmission
    {
        public string? ProductName { get; set; }
        public string? ProductDescription { get; set; }
    }
}